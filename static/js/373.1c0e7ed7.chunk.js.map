{"version":3,"file":"static/js/373.1c0e7ed7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.js","redux/filter/selectors.js","components/ContactsList/ContactsList.jsx","components/FindCont/FindCont.styled.js","components/FindCont/FindCont.jsx","pages/Contacts/Contacs.styled.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Conteiner = styled(Form)`\ndisplay: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    width: fit-content;\n    gap: 20px;\n\tmargin-top: 10px;\n`\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\n    flex-wrap: wrap;\n    gap: 5px;\n`\nexport const Err = styled.p`\ncolor: red;\n    font-size: 13px;\n`\nexport const Btn = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 200px;\n  height: 40px;\n  line-height: 30px;\n  border-radius: 30px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: #524f4e;\n  background: white;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\n  transition: .3s;\n&:hover {\n  background: orange;\n  box-shadow: 0 15px 20px orange;\n  color: white;\n  transform: translateY(-7px);\n}\n`","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoadingContacts = state => state.contacts.isLoading;\n\nexport const selectErrorContacts = state => state.contacts.error","import { Conteiner, Label, Err, Btn } from \"./ContactForm.styled\";\nimport {  Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\n\n\nconst ContactSchema = Yup.object().shape({\n   name: Yup.string()\n     .min(2, 'Too Short!')\n     .max(50, 'Too Long!')\n     .required('Required'),\n   number: Yup.number()\n     .min(2, 'Too Short!')\n     .required('Required'),\n });\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \nconst newContact = (newContact) => {\n  const newNameToLower = newContact.name.toLocaleLowerCase()\n \n  const checkName = contacts.some(contact => contact.name.toLocaleLowerCase() === newNameToLower)\n    if (checkName) {\n      alert(`${newContact.name} is already in contacts`)\n      return\n  }\n  dispatch(addContact(newContact))\n  }\n\n    return <Formik\n      initialValues={{\n        name: '',\n        number: '',\n        }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n          newContact(values)\n          actions.resetForm();\n      }}\n    >\n      <Conteiner>\n\n            <Label htmlFor=\"name\">Name\n          <Field id=\"name\" name=\"name\" placeholder=\"Jane\" />    \n          <ErrorMessage name=\"name\">{msg => <Err>{msg}</Err>}</ErrorMessage>\n        </Label>\n        \n        <Label htmlFor=\"number\">Number\n          <Field id=\"number\" name=\"number\" placeholder=\"459-12-56\" />\n          <ErrorMessage name=\"number\">{msg => <Err>{msg}</Err>}</ErrorMessage>\n        </Label>\n        \n        <Btn type=\"submit\">Add contact</Btn>\n      </Conteiner>\n    </Formik>\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.div`\nmargin-top: 10px;\n`\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\n    flex-wrap: wrap;\nmargin-top: 10px;\ngap: 10px;\n\n`\nexport const Item = styled.li`\ndisplay: flex;\ngap: 10px;\n    align-items: center;\n\n`\nexport const Btn = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  line-height: 20px;\n  border-radius: 30px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 7.5px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: #524f4e;\n  background: white;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\n  transition: .3s;\n&:hover {\n  background: orange;\n  box-shadow: 0 15px 20px orange;\n  color: white;\n  transform: translateY(-7px);\n}\n`","export const selectFilter = state => state.filter.filter","import { Container, Item, List, Btn } from \"./ContactsList.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { initialFilter } from \"redux/filter/slice\";\nimport { deleteContact, fetchContacts} from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { selectFilter } from \"redux/filter/selectors\";\nimport { useEffect } from \"react\";\n\n\nexport const ContactsList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n const filterContacts = contacts.filter(\n    (contact) => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1,\n  );\n  ;\n    const removeContact = (id) => [\n        dispatch(deleteContact(id)),\n        dispatch(initialFilter())\n    ]\n\n    return <Container>\n        {<List>\n            {filterContacts.map(({id, name, number}) => (\n                <Item key={id}>\n                    <p>{name}:</p><p>{number}</p>\n                <Btn id={id} onClick={evt => removeContact(evt.target.id)}>Delete</Btn>\n                </Item>\n                \n            ))}\n    </List>} \n    </Container>\n       \n}","import styled from \"styled-components\";\n\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    gap: 5px;\n    width: fit-content;\n`","import { checkFilter } from \"redux/filter/slice\";\nimport { Label } from \"./FindCont.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from \"redux/filter/selectors\";\nimport { selectContacts } from \"redux/contacts/selectors\";\n\nexport const FindCont = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter)\n    const contacts = useSelector(selectContacts)\n\n    const changeFilter = (value) => {\n    dispatch(checkFilter(value))\n    }\n    const checkContacts = contacts.length > 0\n    return checkContacts\n    ?<Label htmlFor=\"findName\">Find contacts by name\n        <input type=\"text\" id=\"findName\" name=\"findName\" onChange={evt => changeFilter(evt.target.value)} value={filter}/>\n        </Label>\n    : (<p>Oops, no one is there</p>)\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.section`\npadding: 40px 20px 40px 20px;\nbox-shadow: 0px 5px 8px 13px rgba(34, 60, 80, 0.21);\ndisplay: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    align-items: center;\n`\nexport const FilterContainer = styled.div`\nmargin-top:30px;\n`","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FindCont } from 'components/FindCont/FindCont';\nimport { Container, FilterContainer } from \"./Contacs.styled.jsx\";\n\nexport default function Contacts() {\n\n  return (<main><Container>\n         <h1>PhoneBook</h1>\n      <ContactForm  />\n      <FilterContainer>\n        <h2>Contacts</h2>\n      <FindCont />\n      <ContactsList/>\n    </FilterContainer>\n    </Container>\n      </main>\n  );\n}\n"],"names":["Conteiner","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Err","_templateObject3","Btn","_templateObject4","selectContacts","state","contacts","ContactSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","newNameToLower","toLocaleLowerCase","some","contact","alert","concat","addContact","resetForm","children","_jsxs","htmlFor","Field","id","placeholder","ErrorMessage","msg","type","Container","List","Item","selectFilter","filter","ContactsList","useEffect","fetchContacts","filterContacts","toLowerCase","indexOf","map","_ref","onClick","evt","deleteContact","initialFilter","removeContact","target","FindCont","length","onChange","value","checkFilter","FilterContainer","Contacts"],"sourceRoot":""}